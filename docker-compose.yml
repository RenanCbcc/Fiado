version: '3.4'

services:        

    nginx:
        build:
            dockerfile: ./nginx.dockerfile
            context: .
        image: nginx
        container_name: nginx
        ports:
            - "8080:80"
        networks: 
            - production-network
        depends_on: 
            - "app1"
            - "app2"
            - "app3"


    app1:
        build:
            dockerfile: ./Dockerfile
            context: .
        image: fiado
        container_name: dockerapp1
        environment:
            DB_CONNECTION_STRING: "host=postgres;port=5432;database=fiadodb;username=root;password=password"
        ports:
            - "8081:80"
        networks: 
            - production-network
        depends_on:
            - "postgres"

    app2:
        build:
            dockerfile: ./Dockerfile
            context: .
        image: fiado
        container_name: dockerapp2
        environment:
            DB_CONNECTION_STRING: "host=postgres;port=5432;database=fiadodb;username=root;password=password"
        ports:
            - "8082:80"
        networks: 
            - production-network
        depends_on:
            - "postgres"

    app3:
        build:
            dockerfile: ./Dockerfile
            context: .
        image: fiado
        container_name: dockerapp3
        environment:
            DB_CONNECTION_STRING: "host=postgres;port=5432;database=fiadodb;username=root;password=password"
        ports:
            - "8083:80"
        networks: 
            - production-network
        depends_on:
            - "postgres"

    postgres:
         image: postgres:13.1
         healthcheck:
               test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
               timeout: 45s
               interval: 10s
               retries: 10
         
         restart: always

         environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=fiadodb

         ports:
            - 5432:5432        
         networks: 
            - production-network
            
networks: 
    production-network:
        driver: bridge